!function(e,a){var t="OMHWebVisualizations";e[t]=a(e,t)}(this,function(e,a){var t,i=e.hasOwnProperty(a)?e[a]:{};return t=function(e){var a,t,s={"interface":{toolbar:{visible:!0,timespanButtons:{visible:!0},zoomButtons:{visible:!0},navigationButtons:{visible:!0}},tooltips:{visible:!0,timeFormat:"M/D/YY, h:mma",decimalPlaces:0,contentFormatter:i.ChartStyles.formatters.defaultTooltip.bind(this),grouped:!0},panZoomUsingMouse:{enabled:!0,hint:{visible:!0}},axes:{yAxis:{visible:!0},xAxis:{visible:!0}}},measures:{body_weight:{data:{yValuePath:"body.body_weight.value"},yAxis:{range:{min:0,max:100},label:"kg"}},heart_rate:{data:{yValuePath:"body.heart_rate.value"},yAxis:{range:{min:30,max:150},label:"bpm"}},step_count:{data:{yValuePath:"body.step_count",xValueQuantization:{period:i.DataParser.QUANTIZE_DAY,aggregator:i.DataParser.aggregators.sum}},chart:{type:"clustered_bar",daysShownOnTimeline:{min:7,max:90}},legend:{seriesName:"Steps",seriesColor:"#eeeeee"},yAxis:{range:{min:0,max:1500},label:"Steps"}},minutes_moderate_activity:{data:{yValuePath:"body.minutes_moderate_activity.value",xValueQuantization:{period:i.DataParser.QUANTIZE_DAY,aggregator:i.DataParser.aggregators.sum}},chart:{type:"clustered_bar",daysShownOnTimeline:{min:7,max:90}},legend:{seriesName:"Minutes of moderate activity",seriesColor:"#4a90e2"},yAxis:{range:{min:0,max:300},label:"Minutes"}},systolic_blood_pressure:{data:{yValuePath:"body.systolic_blood_pressure.value"},yAxis:{range:{min:30,max:200},label:"mmHg"}},diastolic_blood_pressure:{data:{yValuePath:"body.diastolic_blood_pressure.value"},yAxis:{range:{min:30,max:200},label:"mmHg"}}}},r={yAxis:{range:{min:0,max:100},label:"Units"},data:{xValueQuantization:{period:i.DataParser.QUANTIZE_NONE,aggregator:i.DataParser.aggregators.mean}},chart:{type:"line",daysShownOnTimeline:{min:1,max:1e3}},legend:{seriesName:"Series",seriesColor:"#4a90e2"}},n=function(){a=i.Utils.mergeObjects(s,e),t=Object.keys(a.measures),t.forEach(function(e){a.measures[e]=i.Utils.mergeObjects(r,a.measures[e])})};this.getConfiguredMeasureNames=function(){return Object.keys(a.measures)},this.getMeasureSettings=function(e){return a.measures[e]},this.getInterfaceSettings=function(){return a["interface"]},n.call(this)},i.ChartConfiguration=t,i});